#!/usr/bin/env -S deno run --allow-read --allow-write --allow-env --env
import { resolve } from "node:path";
import { getFormatDescription } from "$common/mod.ts";

const FILE_PATH = resolve(
  import.meta.dirname ?? "scripts",
  "..",
  "ASN_FORAMT_EXAMPLES.md",
);

const EXAMPLES: [string, number, boolean][] = [
  ["ASN", 3, false],
  ["ASN", 3, true],
  ["ASN", 30, false],
  ["WBD", 30, true],
  ["WBD", 300, false],
  ["WBD", 300, true],
];

const md = (
  prefix: string,
  range: number,
  enableExtension: boolean,
  output: string,
) => `
## Range ${range} ${
  enableExtension ? "with ASN_ENABLE_NAMESPACE_EXTENSION" : ""
}

Configuration (Environment Variables):

\`\`\`env
ASN_PREFIX=${prefix}
ASN_NAMESPACE_RANGE=${range}
ASN_ENABLE_NAMESPACE_EXTENSION=${enableExtension}
\`\`\`

Format Description:

\`\`\`text
${output}
\`\`\`

`;

let content = `<!-- deno-fmt-ignore-file -->
<!-- This file is generated by scripts/format-examples.ts -->

# ASN Format Examples

[Back to README](./README.md)


---
`;

for (const [prefix, range, enableExtension] of EXAMPLES) {
  content += md(
    prefix,
    range,
    enableExtension,
    getFormatDescription({
      ASN_PREFIX: prefix,
      ASN_NAMESPACE_RANGE: range,
      ASN_ENABLE_NAMESPACE_EXTENSION: enableExtension,
      ADDITIONAL_MANAGED_NAMESPACES: [],
      PORT: 8080,
      ASN_BARCODE_TYPE: "CODE_128",
      ASN_LOOKUP_INCLUDE_PREFIX: false,
      DATA_DIR: "",
      DB_FILE_NAME: "",
    }),
  );
}

await Deno.writeTextFile(FILE_PATH, content);

console.log(`Generated ${FILE_PATH}`);
